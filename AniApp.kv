#:kivy 2.0.0
#:import hex kivy.utils.get_color_from_hex


<WindowManager@ScreenManager>:
    canvas.before:
        Color:
            rgba: hex("#34373CFF")

        Rectangle:
            size: self.size
            pos: self.pos

    Screen:
        name: "MainWindow"
        HomeWindow:
            id: HomeWindow

    Screen:
        name: "AniInfoWindow"

        InfoWindow:
            id: InfoWindow

    Screen:
        name: "VideoPlayer"

        VideoWindow:
            id: VideoWindow

<VideoInfo@Button>
    background_color: (0, 0, 0, 0)
    background_normal: ''

    size: self.size
    text_size: self.size
    size_hint: None, None

    font_size: 10

    halign: "right"
    valign: "middle"

    sourceLink: ""

    canvas.before:
        Color:
            rgba: 0.1, 0.1, 0.1, 0.5

        Line:
            points: self.pos[0], self.pos[1], self.pos[0]+self.size[0], self.pos[1]
            width: 1


<RoundedButton@Button>
    background_color: (0, 0, 0, 0)
    background_normal: ''
    back_color: (1, 1, 1, 0)
    border_radius: [18, 18, 18, 18]

    canvas.before:
        Color:
            rgba: self.back_color

        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: self.border_radius or [18, 18, 18, 18]

<SearchInputBox@TextInput>
    pos: self.pos
    size: self.size
    size_hint: None, None

    canvas.before:
        Color:
            rgb: 1, 1, 1
        
        Line:
            points: self.pos[0], self.pos[1], self.pos[0]+self.size[0], self.pos[1]
            width: 1

<TempInputBox@TextInput>


<EpisodeInputBox@FloatLayout>
    pos: self.pos
    size: self.size
    size_hint: None, None
    maxEp: 2

    canvas.before:
        Color:
            rgba: 1, 1, 1, 1

        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [self.size[1]/2] * 4

        Color:
            rgb: hex("#282a2b")

        RoundedRectangle:
            pos: self.pos[0]+1, self.pos[1]+1
            size: self.size[0]-2, self.size[1]-2
            radius: [self.size[1]/2] * 4

    TempInputBox:
        id: EpisodeInputInput

        pos: self.parent.pos
        size: self.parent.size

        font_size: self.size[1] / 2

        input_filter: "int"

        background_color: hex("#00000000")
        foreground_color: hex("#FFFFFFFF")
        background_normal: ""
        cursor_color: hex("#19e3cbFF")
        hint_text: f"Episode No between 1 to {root.maxEp}"

<AniWidget@RelativeLayout>
    size_hint: None, None
    pos: self.pos
    size: self.size # root.height*0.2, root.height*0.2 * 4 / 3 #
    border_radius: [18, 18, 18, 18]
    thumbnailUrl: ""
    aniText: ""
    episodeNumber: 0
    imageSizeY: 0
    fontSize: 0
    data: None

    canvas.before:
        StencilPush

        Color:
            rgba: hex("#00000000")
        RoundedRectangle:
            pos: 0, 0
            size: self.size
            radius: [25, 5, 25, 5]

        StencilUse


    canvas.after:
        StencilUnUse

        Color:
            rgba: hex("#00000000")
        RoundedRectangle:
            pos: 0, 0

            # It cause rectangle in corner..
            # I suppose setting the size to 0 eliminates traces of the rectangle to stay behind
            # This somehow clears the stencil though, even though I'm not redrawing it as said in the documentation...
            # whatever it works

            size: 0, 0 # self.size
            radius: [25, 5, 25, 5]

        StencilPop


    Image:
        id: Thumbnail

        source: "loading.gif"
        pos: 0, self.parent.size[1]*(1-self.parent.imageSizeY)
        size_hint: None, None
        size: self.parent.size[0], self.parent.size[1]*self.parent.imageSizeY
        allow_stretch: True
        keep_ratio: False
        mipmap: True

    RoundedButton:
        back_color: hex("#3F4146FF")
        border_radius: [0, 0, 30, 5]

        size_hint: None, None
        size: self.parent.size[0], self.parent.size[1]*(1-self.parent.imageSizeY)
        pos: 0, 0

    Button:
        id: AniLabelButton

        background_color: (0, 0, 0, 0)

        size_hint: None, None
        pos: 0, 0
        size: self.parent.size[0], self.parent.size[1]*(1-self.parent.imageSizeY)
        text_size: self.parent.size[0], None

        text: self.parent.aniText + f"\n[color=A0A0A0]Episode {self.parent.episodeNumber}[/color]"
        valign: "top"
        halign: "center"
        font_name: "Cyberbit.ttf"
        font_size: self.parent.fontSize
        markup: True
        #shorten: True

    Button:
        background_color: (0, 0, 0, 0)
        background_normal: ''
        back_color: (0, 0, 0, 0)

        on_press: root.parent.parent.parent.AniSearchButtonPressed(root)

<SearchAniWidget@RelativeLayout>
    size_hint: None, None
    pos: self.pos
    size: self.size # root.height*0.2, root.height*0.2 * 4 / 3 #
    border_radius: [18, 18, 18, 18]
    thumbnailUrl: ""
    aniText: ""
    extraNames: ""
    genre: ""
    imageSizeY: 0
    fontSize: 0
    data: None

    canvas.before:
        StencilPush

        #Color:
        #    rgba: hex("#00000000")
        RoundedRectangle:
            pos: 0, 0
            size: self.size
            radius: [25, 5, 25, 5]

        StencilUse


    canvas.after:
        StencilUnUse

        #Color:
        #    rgba: hex("#00000000")
        RoundedRectangle:
            pos: 0, 0

            # It cause rectangle in corner..
            # I suppose setting the size to 0 eliminates traces of the rectangle to stay behind
            # This somehow clears the stencil though, even though I'm not redrawing it as said in the documentation...
            # whatever it works

            size: 0, 0
            #size: self.size
            radius: [25, 5, 25, 5]

        StencilPop


    Image:
        id: Thumbnail

        source: "loading.gif"
        pos: 0, self.parent.size[1]*(1-self.parent.imageSizeY)
        size_hint: None, None
        size: self.parent.size[0], self.parent.size[1]*self.parent.imageSizeY
        allow_stretch: True
        keep_ratio: False
        mipmap: True

    RoundedButton:
        back_color: hex("#3F4146FF")
        border_radius: [0, 0, 30, 5]

        size_hint: None, None
        size: self.parent.size[0], self.parent.size[1]*(1-self.parent.imageSizeY)
        pos: 0, 0

    Button:
        id: AniLabelButton

        background_color: (0, 0, 0, 0)

        size_hint: None, None
        pos: 0, 0
        size: self.parent.size[0], self.parent.size[1]*(1-self.parent.imageSizeY)
        text_size: self.parent.size[0], None

        text: self.parent.aniText + f"\n[color=A0A0A0]{self.parent.extraNames}\n{self.parent.genre}[/color]"
        valign: "top"
        halign: "center"
        font_name: "Cyberbit.ttf"
        font_size: self.parent.fontSize
        markup: True
        #shorten: True

    Button:
        background_color: (0, 0, 0, 0)
        background_normal: ''
        back_color: (0, 0, 0, 0)

        on_press: root.parent.parent.parent.AniSearchButtonPressed(root)

<EpisodeWidget@RelativeLayout>:
    size_hint: None, None
    pos: self.pos
    size: self.size # root.height*0.2, root.height*0.2 * 4 / 3 #
    border_radius: [18, 18, 18, 18]
    fontSize: 0
    episodeNumber: "0"
    colour: "#ffd700"
    name: self.name
    title: self.title
    view: self.view

    canvas.before:
        Color:
            rgb: hex("#000000")

        RoundedRectangle:
            pos: 2, -2
            size: self.size
            radius: [10, 10, 10, 10]

        Color:
            rgb: hex(self.colour)

        RoundedRectangle:
            pos: 0, 0
            size: self.size
            radius: [10, 10, 10, 10]

    Button:
        id: ButtonWidget

        background_color: (0, 0, 0, 0)
        background_normal: ''

        pos: 0, 0
        size_hint: None, None
        size: self.parent.size
        valign: "middle"
        font_size: self.parent.fontSize

        text: self.parent.episodeNumber

    Button:
        background_color: (0, 0, 0, 0)
        background_normal: ''
        back_color: (0, 0, 0, 0)

        on_press: root.parent.parent.parent.parent.EpisodeButtonPressed(root)


<HomeWindow@Widget>:
    canvas.before:
        Color:
            rgba: hex("#34373CFF")
            #rgba: hex("#FF33FCFF")

        Rectangle:
            pos: 0, 0
            size: root.width, root.height

        Color:
            rgba: hex("#5865F2FF")

        RoundedRectangle:
            id: TopBar
            pos: 0, root.height*0.9
            size: root.width, root.height*0.1
            radius: [0, 0, root.height*0.04, root.height*0.04]

    Button:
        id: SearchButton
        background_normal: ""
        background_color: (0, 0, 0, 0)
        pos: root.width*0.95 - ((root.height*0.1+2)*2), root.height*(0.9 + 0.01)
        size: root.height*0.08, root.height*0.08

        on_press: root.SearchButtonToggle()

        Image:
            pos: self.parent.pos
            size: self.parent.size
            size_hint: None, None
            source: "search.png"
            mipmap: True

    Button:
        background_normal: ""
        background_color: (0, 0, 0, 0)
        pos: root.width*0.95 - (root.height*0.1+2), root.height*(0.9 + 0.01)
        size: root.height*0.08, root.height*0.08

        on_press: root.AboutButtonClicked()

        Image:
            pos: self.parent.pos
            size: self.parent.size
            size_hint: None, None
            source: "about.png"
            mipmap: True

    Button:
        id: BackButton

        background_normal: ""
        background_color: (0, 0, 0, 0)
        pos: root.width*0.02, root.height*(0.9 + 0.01)
        size: root.height*0.08, root.height*0.08

        opacity: 0

        on_press: root.SearchButtonToggle()

        Image:
            pos: self.parent.pos
            size: self.parent.size
            size_hint: None, None
            source: "backarrow.png"
            mipmap: True

    SearchInputBox:
        id: TextInputSearchBox

        background_normal: ""

        size: 0, root.height*0.08
        pos: root.width*0.9, root.height*(0.9 + 0.01)
        #pos: 200, root.height*(0.9 + 0.01)
        
        opacity: 0

        cursor_color: (0.8, 0.8, 0.8, 1)
        selection_color: hex("#589BF288")
        foreground_color: (1, 1, 1, 1)
        background_color: (0,0,0,0)

        font_size: root.height/24
        font_name: "Cyberbit.ttf"

        multiline: False
        readonly: True
        
    ScrollView:
        id: ScrollAniGrid
        size: root.width, root.height*0.9

        size_hint: 1, None
        #effect_cls: "ScrollEffect"
        scroll_wheel_distance: 20
        
        GridLayout:
            id: AniGridLayout
            size: root.width, root.height*0.9
            orientation: "lr-tb"
            size_hint: 1, None
            
            height: self.minimum_height
            
            cols: root.gridCols
            padding: root.padding
            spacing: root.spacingX, 40

            AniWidget:
                id: PlaceHolder

                width: root.aniWidgetWidth
                height: root.aniWidgetHeight

    ScrollView:
        id: ScrollSearchGrid

        size: root.width, root.height*0.9
        size_hint: 1, None
        #effect_cls: "ScrollEffect"
        scroll_wheel_distance: 20

        GridLayout:
            id: SearchGridLayout
            size: root.width, root.height*0.9
            orientation: "lr-tb"
            size_hint_y: None

            height: self.minimum_height

            cols: root.gridCols
            padding: root.padding
            spacing: root.spacingX, 40

            SearchAniWidget:
                id: PlaceHolder2

                width: root.aniWidgetWidth
                height: root.aniWidgetHeight

    FloatLayout:
        size: root.size

        Label:
            id: Title

            text: "ProjectAniPhoenix"
            font_size: root.height*0.1*0.4
            size: root.width, root.height*0.1
            pos: -root.width/2 + (root.height*0.1*0.4)*len("ProjectAniPhoenix")/2*0.6, root.height*0.45

<InfoWindow@Widget>:
    canvas.before:
        Color:
            rgba: hex("#34373CFF")
            #rgba: hex("#FF33FCFF")

        Rectangle:
            pos: 0, 0
            size: root.width, root.height

        Color:
            rgba: hex("#5865F2FF")

        RoundedRectangle:
            id: TopBar
            pos: 0, root.height*0.9
            size: root.width, root.height*0.1
            radius: [0, 0, root.height*0.04, root.height*0.04]

    Button:
        id: BackButton

        background_normal: ""
        background_color: (0, 0, 0, 0)
        pos: root.width*0.005, root.height*(0.9 + 0.01)
        size: root.height*0.08, root.height*0.08

        on_press: root.BackArrowPressed()

        Image:
            pos: self.parent.pos
            size: self.parent.size
            size_hint: None, None
            source: "backarrow.png"
            #mipmap: True

    ScrollView:
        id: ScrollSearchGrid

        pos: 0, 0
        size: root.width, root.height*0.9
        #effect_cls: "ScrollEffect"
        scroll_wheel_distance: 20

        RelativeLayout:
            id: RelLayout

            size_hint: None, None
            size: root.width, 100
            pos: 0, 0

            Image:
                id: Thumbnail

                source: "loading.gif"
                pos: self.parent.width/2 - (root.height*0.4/2), self.parent.height-(root.height*0.4 * 16/9)-(0.05*root.height)
                size_hint: None, None
                size: root.height*0.4, root.height*0.4 * 16/9
                allow_stretch: True
                keep_ratio: False
                mipmap: True

                canvas.before:
                    StencilPush

                    #Color:
                    #    rgba: hex("#00000000")
                    RoundedRectangle:
                        pos: self.pos
                        size: self.size
                        radius: [25, 5, 25, 5]

                    StencilUse


                canvas.after:
                    StencilUnUse

                    #Color:
                    #    rgba: hex("#00000000")
                    RoundedRectangle:
                        pos: self.pos

                        # It cause rectangle in corner..
                        # I suppose setting the size to 0 eliminates traces of the rectangle to stay behind
                        # This somehow clears the stencil though, even though I'm not redrawing it as said in the documentation...
                        # whatever it works

                        size: 0, 0
                        #size: self.size
                        radius: [25, 5, 25, 5]

                    StencilPop

            Button:
                background_color: (0, 0, 0, 0)
                background_normal: ''

                textDescription: ""
                descriptionHeight: 0
                descriptionHeightOffset: 0

                id: description

                pos: 0.05*root.width, self.descriptionHeightOffset
                size_hint: None, None
                size: (1-0.05*2)*root.width, self.descriptionHeight
                valign: "middle"
                text_size: (1-0.05*2)*root.width, None
                font_size: root.height/24

                text: self.textDescription

            EpisodeInputBox:
                id: EpisodeInput

                pos: root.width*0.05, 0
                size: root.width*0.9, root.height/12 * 1.2

                Button:
                    id: SearchButton
                    background_normal: ""
                    background_color: (0, 0, 0, 0)
                    pos: self.parent.pos[0] + self.parent.size[0]/2 - self.parent.size[1] , self.parent.pos[1]
                    size: self.parent.size[1], self.parent.size[1]

                    on_press: root.searchClicked()

                    Image:
                        pos: self.parent.pos
                        size: self.parent.size[0], self.parent.size[1]
                        size_hint: None, None
                        source: "search.png"
                        mipmap: True


            GridLayout:
                id: EpisodeGridLayout
                pos: 0.1*root.width, 0#-root.height*0.9
                size: root.width*0.8, self.minimum_height
                orientation: "lr-tb"
                size_hint_y: None

                height: self.minimum_height

                cols: root.gridCols

                padding: 20
                spacing: root.spacingX, 40

                EpisodeWidget:
                    opacity: 0

                    id: EpisodePlaceHolder

                    width: 10
                    height: 10

    FloatLayout:
        size: root.size

        Label:
            id: Title

            text: root.aniName
            font_size: root.height*0.1*0.4
            size: root.width, root.height*0.1
            pos: (root.height*0.1) + -root.width/2 + (root.height*0.1*0.4)*len(root.aniName)/2*0.6, root.height*0.45


<VideoWindow@Widget>:
    canvas.before:
        Color:
            rgb: 0, 0, 0

        Rectangle:
            pos: 0, 0
            size: root.width, root.height

    Video:
        pos: 0, 0
        size: root.width, root.height

        id: VideoWidget

        source: ""
        state: "pause"
        allow_stretch: True

    Button:
        pos: 0, 0
        size: root.width, root.height

        id: BackgroundButton

        background_color: (0, 0, 0, 0.2)
        background_normal: ''

    Button:
        pos: 0, 0
        size: root.width, root.height

        id: TouchButton

        background_color: (0, 0, 0, 0)
        background_normal: ''
        back_color: (0, 0, 0, 0)

        on_press: root.touchButtonTouched()

    Button:
        id: BackButton

        background_normal: ""
        background_color: (0, 0, 0, 0)
        pos: root.width*0.02, root.height*(0.9 + 0.01)
        size: root.height*0.08, root.height*0.08

        on_press: root.BackButtonClicked()

        Image:
            pos: self.parent.pos
            size: self.parent.size
            size_hint: None, None
            source: "backarrow.png"
            mipmap: True

    FloatLayout:
        pos: 0, 0
        size: root.size
        size_hint: None, None

        Label:
            id: Title

            text: root.title
            font_size: root.height*0.05
            #size_hint: None, None
            #size: root.width, root.height*0.1
            text_size: self.size
            pos: root.width*0.085, root.height*0.925

        Label:
            id: PositionDurationText

            size: root.width, root.height*0.05*1.25
            size_hint: None, None

            text: root.positionDurationString
            font_size: root.height*0.05

            text_size: self.size
            pos: root.height*0.01, root.height*0.01

        Label:
            id: VolumeText

            size: root.width, root.height*0.05*1.25
            size_hint: None, None

            text: root.volumeString
            font_size: root.height*0.05

            text_size: self.size
            pos: root.width*0.5 - (4*root.height*0.05*0.55), root.height*0.01

    Slider:
        id: DurationSlider

        min: 0
        max: 100
        step: 1

        orientation: 'horizontal'

        pos: 0, root.height*0.05
        size: root.width, root.height/36
        value_track_width: root.height/(36*1.5)
        value_track_color: 0.1, 0.1, 0.1, 0.8

        #cursor_image: "circle.png"
        #cursor_size: root.height/10, root.height/10

        on_touch_down: if self.collide_point(*args[1].pos): root.Slider_TouchUpDown(True)
        on_touch_up: if self.collide_point(*args[1].pos): root.Slider_TouchUpDown(False)

        #canvas.after:
        #    Color:
        #        rgba: 0, 0, 0, 0.5

        #    Rectangle:
        #        pos: self.pos[0]+16, self.pos[1]
        #        size: (self.size[0]-32)*root.normalisedDuration, self.size[1] * 0.6

    Slider:
        id: VolumeSlider

        min: 0
        max: 100
        step: 1
        value: 100

        orientation: 'horizontal'

        pos: root.width*0.5, root.height/36
        size: root.width*0.5, root.height/36

    Button:
        id: RowsButton

        size: root.height*0.1, root.height*0.1
        pos: root.width - root.height*0.1, root.height * 0.9

        background_normal: ""
        background_color: (0, 0, 0, 0)
        size_hint: None, None

        on_press: root.RowClicked()

        Image:
            id: RowsButtonImage

            pos: self.parent.pos
            size: self.parent.size
            size_hint: None, None
            source: "rows.png"
            mipmap: True

        GridLayout:
            id: RowsGridLayout

            pos: root.width*0.8, root.height*0.9-self.minimum_height
            size: root.width*0.2, self.minimum_height

            orientation: "lr-tb"
            size_hint: 1, None

            height: self.minimum_height

            cols: 1
            padding: 0
            spacing: 0, 0

            VideoInfo:
                id: PlaceHolderVideoInfo
                text: "Placeholder"
                size: root.parent.width*0.1, root.height*0.05


    AnchorLayout:
        anchor_x: "center"
        anchor_y: "center"

        pos: 0, 0
        size: root.width, root.height

        Button:
            id: PlayPauseButton
            background_normal: ""
            background_color: (0, 0, 0, 0)
            size: root.height*0.3, root.height*0.3
            size_hint: None, None

            on_press: root.TogglePlayPause()

            Image:
                id: PlayPauseButtonImage

                pos: self.parent.pos
                size: self.parent.size
                size_hint: None, None
                source: "PauseButtonW.png"
                mipmap: True

    RoundedButton:
        id: PositionSliderInfo

        back_color: 0.2, 0.2, 0.2, 0.5
        border_radius: [5, 5, 5, 5]


        pos: root.width*2, root.height*2
        size: self.texture_size[0] + 10, self.texture_size[1] + 10
        font_size: root.height/18
        text: ""

